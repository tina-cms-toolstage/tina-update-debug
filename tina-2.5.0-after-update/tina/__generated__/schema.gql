# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  hasReferences: Boolean
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  globalSettings(relativePath: String): GlobalSettings!
  globalSettingsConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: GlobalSettingsFilter): GlobalSettingsConnection!
  navigation(relativePath: String): Navigation!
  navigationConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: NavigationFilter): NavigationConnection!
  page(relativePath: String): Page!
  pageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PageFilter): PageConnection!
  testimonial(relativePath: String): Testimonial!
  testimonialConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: TestimonialFilter): TestimonialConnection!
}

input DocumentFilter {
  globalSettings: GlobalSettingsFilter
  navigation: NavigationFilter
  page: PageFilter
  testimonial: TestimonialFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = GlobalSettings | Navigation | Page | Testimonial | Folder

type GlobalSettingsSiteInformationContactDataEmail {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationContactDataPhone {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationContactDataMobile {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationContactData {
  street: String
  streetNo: String
  postalCode: String
  city: String
  email: GlobalSettingsSiteInformationContactDataEmail
  phone: GlobalSettingsSiteInformationContactDataPhone
  mobile: GlobalSettingsSiteInformationContactDataMobile
  fax: String
}

type GlobalSettingsSiteInformationSocialLinksFacebook {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationSocialLinksX {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationSocialLinksThreads {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationSocialLinksInstagram {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationSocialLinksYoutube {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationSocialLinksLinkedIn {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationSocialLinksXing {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type GlobalSettingsSiteInformationSocialLinks {
  iconStyle: String
  facebook: GlobalSettingsSiteInformationSocialLinksFacebook
  x: GlobalSettingsSiteInformationSocialLinksX
  threads: GlobalSettingsSiteInformationSocialLinksThreads
  instagram: GlobalSettingsSiteInformationSocialLinksInstagram
  youtube: GlobalSettingsSiteInformationSocialLinksYoutube
  linkedIn: GlobalSettingsSiteInformationSocialLinksLinkedIn
  xing: GlobalSettingsSiteInformationSocialLinksXing
}

type GlobalSettingsSiteInformation {
  siteName: String!
  siteUrl: String!
  logo: String!
  contactData: GlobalSettingsSiteInformationContactData
  socialLinks: GlobalSettingsSiteInformationSocialLinks
}

type GlobalSettingsSlideInMenu {
  position: String
}

type GlobalSettingsGlobalSeoMetaKeywords {
  metaKeywordList: [String]
}

type GlobalSettingsGlobalSeoRobots {
  index: Boolean
  follow: Boolean
  imageindex: Boolean
}

type GlobalSettingsGlobalSeo {
  metaDescription: String
  metaKeywords: GlobalSettingsGlobalSeoMetaKeywords
  robots: GlobalSettingsGlobalSeoRobots
}

type GlobalSettingsGlobalLayoutAdditionalColors {
  colorName: String!
  colorValue: String
}

type GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersColorLayerTemplate {
  colorLayer: String
}

type GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersImageLayerTemplate {
  image: String
  bgPos: String
  bgPosStr: String
  bgRep: String
}

union GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayers = GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersColorLayerTemplate | GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersImageLayerTemplate

type GlobalSettingsGlobalLayoutAdvancedBackgrounds {
  advancedBackgroundName: String!
  advancedBackgroundLayers: [GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayers]
}

type GlobalSettingsGlobalLayoutTextStyleSets {
  name: String!
  headingColor: String
  bodyColor: String
}

type GlobalSettingsGlobalLayoutButtonStyleSets {
  name: String!
  backgroundColor: String
  backgroundColorHover: String
  borderColor: String
  borderColorHover: String
  borderWidth: String
  textColor: String
  textColorHover: String
}

type GlobalSettingsGlobalLayoutTwSafeList {
  safeListClasses: [String]
}

type GlobalSettingsGlobalLayout {
  primaryColor: String
  secondaryColor: String
  additionalColors: [GlobalSettingsGlobalLayoutAdditionalColors]
  headingColor: String
  bodyColor: String
  advancedBackgrounds: [GlobalSettingsGlobalLayoutAdvancedBackgrounds]
  textStyleSets: [GlobalSettingsGlobalLayoutTextStyleSets]
  buttonStyleSets: [GlobalSettingsGlobalLayoutButtonStyleSets]
  twSafeList: GlobalSettingsGlobalLayoutTwSafeList
}

type GlobalSettingsMailConfiguration {
  logo: String
  contactRecipients: [String]
  senderName: String
  senderAddress: String
  replyAddress: String
}

type GlobalSettingsLegalTextsImprint {
  imprintFetch: Boolean
  imprintAdditionalText: JSON
}

type GlobalSettingsLegalTextsPrivacyPolicy {
  privacyPolicyFetch: Boolean
  privacyPolicyAdditionalText: JSON
}

type GlobalSettingsLegalTexts {
  imprint: GlobalSettingsLegalTextsImprint
  privacyPolicy: GlobalSettingsLegalTextsPrivacyPolicy
}

type GlobalSettingsSiteFooter {
  logo: String
}

type GlobalSettings implements Node & Document {
  siteInformation: GlobalSettingsSiteInformation
  SlideInMenu: GlobalSettingsSlideInMenu
  globalSeo: GlobalSettingsGlobalSeo
  globalLayout: GlobalSettingsGlobalLayout
  mailConfiguration: GlobalSettingsMailConfiguration
  legalTexts: GlobalSettingsLegalTexts
  siteFooter: GlobalSettingsSiteFooter
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input GlobalSettingsSiteInformationContactDataEmailFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationContactDataPhoneFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationContactDataMobileFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationContactDataFilter {
  street: StringFilter
  streetNo: StringFilter
  postalCode: StringFilter
  city: StringFilter
  email: GlobalSettingsSiteInformationContactDataEmailFilter
  phone: GlobalSettingsSiteInformationContactDataPhoneFilter
  mobile: GlobalSettingsSiteInformationContactDataMobileFilter
  fax: StringFilter
}

input GlobalSettingsSiteInformationSocialLinksFacebookFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationSocialLinksXFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationSocialLinksThreadsFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationSocialLinksInstagramFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationSocialLinksYoutubeFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationSocialLinksLinkedInFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationSocialLinksXingFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input GlobalSettingsSiteInformationSocialLinksFilter {
  iconStyle: StringFilter
  facebook: GlobalSettingsSiteInformationSocialLinksFacebookFilter
  x: GlobalSettingsSiteInformationSocialLinksXFilter
  threads: GlobalSettingsSiteInformationSocialLinksThreadsFilter
  instagram: GlobalSettingsSiteInformationSocialLinksInstagramFilter
  youtube: GlobalSettingsSiteInformationSocialLinksYoutubeFilter
  linkedIn: GlobalSettingsSiteInformationSocialLinksLinkedInFilter
  xing: GlobalSettingsSiteInformationSocialLinksXingFilter
}

input GlobalSettingsSiteInformationFilter {
  siteName: StringFilter
  siteUrl: StringFilter
  logo: ImageFilter
  contactData: GlobalSettingsSiteInformationContactDataFilter
  socialLinks: GlobalSettingsSiteInformationSocialLinksFilter
}

input GlobalSettingsSlideInMenuFilter {
  position: StringFilter
}

input GlobalSettingsGlobalSeoMetaKeywordsFilter {
  metaKeywordList: StringFilter
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input GlobalSettingsGlobalSeoRobotsFilter {
  index: BooleanFilter
  follow: BooleanFilter
  imageindex: BooleanFilter
}

input GlobalSettingsGlobalSeoFilter {
  metaDescription: StringFilter
  metaKeywords: GlobalSettingsGlobalSeoMetaKeywordsFilter
  robots: GlobalSettingsGlobalSeoRobotsFilter
}

input GlobalSettingsGlobalLayoutAdditionalColorsFilter {
  colorName: StringFilter
  colorValue: StringFilter
}

input GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersColorLayerTemplateFilter {
  colorLayer: StringFilter
}

input GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersImageLayerTemplateFilter {
  image: ImageFilter
  bgPos: StringFilter
  bgPosStr: StringFilter
  bgRep: StringFilter
}

input GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersFilter {
  colorLayerTemplate: GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersColorLayerTemplateFilter
  imageLayerTemplate: GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersImageLayerTemplateFilter
}

input GlobalSettingsGlobalLayoutAdvancedBackgroundsFilter {
  advancedBackgroundName: StringFilter
  advancedBackgroundLayers: GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersFilter
}

input GlobalSettingsGlobalLayoutTextStyleSetsFilter {
  name: StringFilter
  headingColor: StringFilter
  bodyColor: StringFilter
}

input GlobalSettingsGlobalLayoutButtonStyleSetsFilter {
  name: StringFilter
  backgroundColor: StringFilter
  backgroundColorHover: StringFilter
  borderColor: StringFilter
  borderColorHover: StringFilter
  borderWidth: StringFilter
  textColor: StringFilter
  textColorHover: StringFilter
}

input GlobalSettingsGlobalLayoutTwSafeListFilter {
  safeListClasses: StringFilter
}

input GlobalSettingsGlobalLayoutFilter {
  primaryColor: StringFilter
  secondaryColor: StringFilter
  additionalColors: GlobalSettingsGlobalLayoutAdditionalColorsFilter
  headingColor: StringFilter
  bodyColor: StringFilter
  advancedBackgrounds: GlobalSettingsGlobalLayoutAdvancedBackgroundsFilter
  textStyleSets: GlobalSettingsGlobalLayoutTextStyleSetsFilter
  buttonStyleSets: GlobalSettingsGlobalLayoutButtonStyleSetsFilter
  twSafeList: GlobalSettingsGlobalLayoutTwSafeListFilter
}

input GlobalSettingsMailConfigurationFilter {
  logo: ImageFilter
  contactRecipients: StringFilter
  senderName: StringFilter
  senderAddress: StringFilter
  replyAddress: StringFilter
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input GlobalSettingsLegalTextsImprintFilter {
  imprintFetch: BooleanFilter
  imprintAdditionalText: RichTextFilter
}

input GlobalSettingsLegalTextsPrivacyPolicyFilter {
  privacyPolicyFetch: BooleanFilter
  privacyPolicyAdditionalText: RichTextFilter
}

input GlobalSettingsLegalTextsFilter {
  imprint: GlobalSettingsLegalTextsImprintFilter
  privacyPolicy: GlobalSettingsLegalTextsPrivacyPolicyFilter
}

input GlobalSettingsSiteFooterFilter {
  logo: ImageFilter
}

input GlobalSettingsFilter {
  siteInformation: GlobalSettingsSiteInformationFilter
  SlideInMenu: GlobalSettingsSlideInMenuFilter
  globalSeo: GlobalSettingsGlobalSeoFilter
  globalLayout: GlobalSettingsGlobalLayoutFilter
  mailConfiguration: GlobalSettingsMailConfigurationFilter
  legalTexts: GlobalSettingsLegalTextsFilter
  siteFooter: GlobalSettingsSiteFooterFilter
}

type GlobalSettingsConnectionEdges {
  cursor: String!
  node: GlobalSettings
}

type GlobalSettingsConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [GlobalSettingsConnectionEdges]
}

type NavigationMenuSubmenu {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

type NavigationMenu {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  submenu: [NavigationMenuSubmenu]
}

type Navigation implements Node & Document {
  title: String!
  menu: [NavigationMenu]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input NavigationMenuSubmenuFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
}

input NavigationMenuFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  submenu: NavigationMenuSubmenuFilter
}

input NavigationFilter {
  title: StringFilter
  menu: NavigationMenuFilter
}

type NavigationConnectionEdges {
  cursor: String!
  node: Navigation
}

type NavigationConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [NavigationConnectionEdges]
}

type PageMainSectionBlocksHeroTextImageBlockCtaButton {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String!
  size: String
}

union PageMainSectionBlocksHeroTextImageBlockCta = PageMainSectionBlocksHeroTextImageBlockCtaButton

type PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsFormat {
  fill: Boolean
  aspectRatio: String
  gravity: String
}

type PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsEffects {
  autoColor: Float
  autoContrast: Float
  autoBrightness: Float
  improve: Float
  sharpen: Float
  gamma: Float
  redeye: Boolean
  grayscale: Boolean
  sepia: Boolean
  art: String
}

type PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptions {
  priority: Boolean
  format: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsFormat
  effects: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsEffects
}

type PageMainSectionBlocksHeroTextImageBlockAdvancedBlockOptions {
  ordering: String
  textAlign: String
  imageAlign: String
  wrapperTag: String
  headerTag: String
  overrideTitleStyle: String
  subtitleTag: String
  overrideSubTitleStyle: String
}

type PageMainSectionBlocksHeroTextImageBlock {
  draft: Boolean!
  textColorSheme: String
  title: String!
  subtitle: String
  introtext: String
  cta: [PageMainSectionBlocksHeroTextImageBlockCta]
  src: String!
  alt: String!
  advancedImageOptions: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptions
  advancedBlockOptions: PageMainSectionBlocksHeroTextImageBlockAdvancedBlockOptions
}

type PageMainSectionBlocksIntroTextBlockCtaButton {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String!
  size: String
}

union PageMainSectionBlocksIntroTextBlockCta = PageMainSectionBlocksIntroTextBlockCtaButton

type PageMainSectionBlocksIntroTextBlockAdvancedBlockOptions {
  wrapperTag: String
  headerTag: String
  overrideTitleStyle: String
  subtitleTag: String
  maxWidth: String
}

type PageMainSectionBlocksIntroTextBlock {
  draft: Boolean!
  textColorSheme: String
  title: String!
  subtitle: String
  introtext: String
  cta: [PageMainSectionBlocksIntroTextBlockCta]
  advancedBlockOptions: PageMainSectionBlocksIntroTextBlockAdvancedBlockOptions
}

type PageMainSectionBlocksSbsImageTextBlockCtaButton {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String!
  size: String
}

union PageMainSectionBlocksSbsImageTextBlockCta = PageMainSectionBlocksSbsImageTextBlockCtaButton

type PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsFormat {
  fill: Boolean
  aspectRatio: String
  gravity: String
}

type PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsEffects {
  autoColor: Float
  autoContrast: Float
  autoBrightness: Float
  improve: Float
  sharpen: Float
  gamma: Float
  redeye: Boolean
  grayscale: Boolean
  sepia: Boolean
  art: String
}

type PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemove {
  items: [String]
  multiple: Boolean
  shadow: Boolean
  execute: Boolean
}

type PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolor {
  items: [String]
  to: String
  multiple: Boolean
  execute: Boolean
}

type PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplace {
  from: String
  to: String
  preserveGeometry: Boolean
  execute: Boolean
}

type PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsGenerative {
  genRemove: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemove
  genRecolor: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolor
  genReplace: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplace
  genFill: Boolean
  genRestore: Boolean
}

type PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptions {
  priority: Boolean
  format: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsFormat
  effects: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsEffects
  generative: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsGenerative
}

type PageMainSectionBlocksSbsImageTextBlockAdvancedBlockOptions {
  ordering: String
  centerTextMobile: Boolean
  textAlign: String
  imageAlign: String
  wrapperTag: String
  headerTag: String
  overrideTitleStyle: String
  subtitleTag: String
}

type PageMainSectionBlocksSbsImageTextBlock {
  draft: Boolean!
  textColorSheme: String
  title: String!
  subtitle: String
  text: JSON
  cta: [PageMainSectionBlocksSbsImageTextBlockCta]
  src: String!
  alt: String!
  advancedImageOptions: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptions
  advancedBlockOptions: PageMainSectionBlocksSbsImageTextBlockAdvancedBlockOptions
}

type PageMainSectionBlocksCardListBlockCardsImageTextCardCtaButton {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String!
  size: String
}

union PageMainSectionBlocksCardListBlockCardsImageTextCardCta = PageMainSectionBlocksCardListBlockCardsImageTextCardCtaButton

type PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsFormat {
  fill: Boolean
  aspectRatio: String
  gravity: String
}

type PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsEffects {
  autoColor: Float
  autoContrast: Float
  autoBrightness: Float
  improve: Float
  sharpen: Float
  gamma: Float
  redeye: Boolean
  grayscale: Boolean
  sepia: Boolean
  art: String
}

type PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptions {
  priority: Boolean
  format: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsFormat
  effects: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsEffects
}

type PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedCardOptions {
  headerTag: String
  wrapperTag: String
  cssClass: String
}

type PageMainSectionBlocksCardListBlockCardsImageTextCard {
  draft: Boolean!
  title: String!
  introtext: JSON
  textCenter: Boolean
  cta: [PageMainSectionBlocksCardListBlockCardsImageTextCardCta]
  backgroundColor: String
  textColorSheme: String
  src: String!
  alt: String!
  advancedImageOptions: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptions
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedCardOptions
}

type PageMainSectionBlocksCardListBlockCardsIconTextCardCtaButton {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String!
  size: String
}

union PageMainSectionBlocksCardListBlockCardsIconTextCardCta = PageMainSectionBlocksCardListBlockCardsIconTextCardCtaButton

type PageMainSectionBlocksCardListBlockCardsIconTextCardAdvancedCardOptions {
  headerTag: String
  wrapperTag: String
  cssClass: String
  iconPosition: String
}

type PageMainSectionBlocksCardListBlockCardsIconTextCard {
  draft: Boolean!
  faIcon: String
  title: String!
  introtext: JSON
  cta: [PageMainSectionBlocksCardListBlockCardsIconTextCardCta]
  backgroundColor: String
  textColorSheme: String
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsIconTextCardAdvancedCardOptions
}

type PageMainSectionBlocksCardListBlockCardsStepTextCardCtaButton {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String!
  size: String
}

union PageMainSectionBlocksCardListBlockCardsStepTextCardCta = PageMainSectionBlocksCardListBlockCardsStepTextCardCtaButton

type PageMainSectionBlocksCardListBlockCardsStepTextCardAdvancedCardOptions {
  headerTag: String
  wrapperTag: String
  cssClass: String
  iconPosition: String
}

type PageMainSectionBlocksCardListBlockCardsStepTextCard {
  draft: Boolean!
  stepNo: String
  title: String!
  introtext: JSON
  cta: [PageMainSectionBlocksCardListBlockCardsStepTextCardCta]
  backgroundColor: String
  textColorSheme: String
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsStepTextCardAdvancedCardOptions
}

union PageMainSectionBlocksCardListBlockCards = PageMainSectionBlocksCardListBlockCardsImageTextCard | PageMainSectionBlocksCardListBlockCardsIconTextCard | PageMainSectionBlocksCardListBlockCardsStepTextCard

type PageMainSectionBlocksCardListBlockAdvancedBlockOptions {
  cardAlign: String
  columnsMobile: String
  columnsTablet: String
  columnsDesktop: String
  gap: String
  cssClass: String
}

type PageMainSectionBlocksCardListBlock {
  draft: Boolean!
  name: String!
  cards: [PageMainSectionBlocksCardListBlockCards]
  advancedBlockOptions: PageMainSectionBlocksCardListBlockAdvancedBlockOptions
}

type PageMainSectionBlocksTextBlockAdvancedBlockOptions {
  wrapperTag: String
  headerTag: String
  overrideTitleStyle: String
}

type PageMainSectionBlocksTextBlock {
  draft: Boolean!
  textColorSheme: String
  title: String!
  text: JSON
  advancedBlockOptions: PageMainSectionBlocksTextBlockAdvancedBlockOptions
}

type PageMainSectionBlocksImageBlockAdvancedImageOptionsFormat {
  fill: Boolean
  aspectRatio: String
  gravity: String
}

type PageMainSectionBlocksImageBlockAdvancedImageOptionsEffects {
  autoColor: Float
  autoContrast: Float
  autoBrightness: Float
  improve: Float
  sharpen: Float
  gamma: Float
  redeye: Boolean
  grayscale: Boolean
  sepia: Boolean
  art: String
}

type PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerative {
  genRemove: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemove
  genRecolor: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolor
  genReplace: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplace
  genFill: Boolean
  genRestore: Boolean
}

type PageMainSectionBlocksImageBlockAdvancedImageOptions {
  priority: Boolean
  format: PageMainSectionBlocksImageBlockAdvancedImageOptionsFormat
  effects: PageMainSectionBlocksImageBlockAdvancedImageOptionsEffects
  generative: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerative
}

type PageMainSectionBlocksImageBlock {
  draft: Boolean!
  src: String!
  alt: String!
  advancedImageOptions: PageMainSectionBlocksImageBlockAdvancedImageOptions
}

union PageMainSectionBlocksTestimonialCarouselBlockTestimonialsTestimonial = Testimonial

type PageMainSectionBlocksTestimonialCarouselBlockTestimonials {
  title: String!
  testimonial: PageMainSectionBlocksTestimonialCarouselBlockTestimonialsTestimonial
}

type PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsControls {
  ctrlColorScheme: String!
  ctrlPrevNext: Boolean
  ctrlDotNav: Boolean
  ctrlStartStop: Boolean
  ctrlSizing: String
}

type PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoplay {
  playOnInit: Boolean
  delay: Float
  stopOnInteraction: Boolean
  stopOnMouseEnter: Boolean
  stopOnFocusIn: Boolean
  stopOnLastSnap: Boolean
}

type PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoscroll {
  playOnInit: Boolean
  speed: Float
  startDelay: Float
  stopOnInteraction: Boolean
  stopOnMouseEnter: Boolean
  stopOnFocusIn: Boolean
}

type PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptions {
  loop: Boolean
  slidesToScroll: String
  duration: Float
  containScroll: String
  dragFree: Boolean
  controls: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsControls
  automation: String
  autoplay: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoplay
  autoscroll: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoscroll
}

type PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptions {
  cardAlign: String
  columnsMobile: String
  columnsTablet: String
  columnsDesktop: String
  gap: String
  cssClass: String
  emblaOptions: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptions
}

type PageMainSectionBlocksTestimonialCarouselBlock {
  draft: Boolean!
  name: String!
  textColorSheme: String
  testimonials: [PageMainSectionBlocksTestimonialCarouselBlockTestimonials]
  advancedBlockOptions: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptions
}

union PageMainSectionBlocks = PageMainSectionBlocksHeroTextImageBlock | PageMainSectionBlocksIntroTextBlock | PageMainSectionBlocksSbsImageTextBlock | PageMainSectionBlocksCardListBlock | PageMainSectionBlocksTextBlock | PageMainSectionBlocksImageBlock | PageMainSectionBlocksTestimonialCarouselBlock

type PageMainSectionAdvancedSectionOptionsPaddings {
  paddingTop: String
  paddingTopMobile: String
  paddingBottom: String
  paddingBottomMobile: String
  paddingBlocks: String
  paddingBlocksMobile: String
}

type PageMainSectionAdvancedSectionOptions {
  sizing: String
  wrapperTag: String
  paddings: PageMainSectionAdvancedSectionOptionsPaddings
  cssClass: String
  cssId: String
}

type PageMainSection {
  draft: Boolean!
  name: String!
  backgroundColor: String
  blocks: [PageMainSectionBlocks]
  advancedSectionOptions: PageMainSectionAdvancedSectionOptions
}

union PageMain = PageMainSection

type PageSeoMetaKeywords {
  metaKeywordList: [String]
}

type PageSeo {
  metaTitle: String
  metaDescription: String
  metaKeywords: PageSeoMetaKeywords
}

type PageSocialSharingOptions {
  title: String
  description: String
  image: String
}

type Page implements Node & Document {
  draft: Boolean!
  title: String!
  main: [PageMain]
  seo: PageSeo
  socialSharingOptions: PageSocialSharingOptions
  createdAt: String
  lastModified: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input PageMainSectionBlocksHeroTextImageBlockCtaButtonFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  faIcon: StringFilter
  colorScheme: StringFilter
  size: StringFilter
}

input PageMainSectionBlocksHeroTextImageBlockCtaFilter {
  button: PageMainSectionBlocksHeroTextImageBlockCtaButtonFilter
}

input PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsFormatFilter {
  fill: BooleanFilter
  aspectRatio: StringFilter
  gravity: StringFilter
}

input NumberFilter {
  lt: Float
  lte: Float
  gte: Float
  gt: Float
  eq: Float
  exists: Boolean
  in: [Float]
}

input PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsEffectsFilter {
  autoColor: NumberFilter
  autoContrast: NumberFilter
  autoBrightness: NumberFilter
  improve: NumberFilter
  sharpen: NumberFilter
  gamma: NumberFilter
  redeye: BooleanFilter
  grayscale: BooleanFilter
  sepia: BooleanFilter
  art: StringFilter
}

input PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsFilter {
  priority: BooleanFilter
  format: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsFormatFilter
  effects: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsEffectsFilter
}

input PageMainSectionBlocksHeroTextImageBlockAdvancedBlockOptionsFilter {
  ordering: StringFilter
  textAlign: StringFilter
  imageAlign: StringFilter
  wrapperTag: StringFilter
  headerTag: StringFilter
  overrideTitleStyle: StringFilter
  subtitleTag: StringFilter
  overrideSubTitleStyle: StringFilter
}

input PageMainSectionBlocksHeroTextImageBlockFilter {
  draft: BooleanFilter
  textColorSheme: StringFilter
  title: StringFilter
  subtitle: StringFilter
  introtext: StringFilter
  cta: PageMainSectionBlocksHeroTextImageBlockCtaFilter
  src: ImageFilter
  alt: StringFilter
  advancedImageOptions: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsFilter
  advancedBlockOptions: PageMainSectionBlocksHeroTextImageBlockAdvancedBlockOptionsFilter
}

input PageMainSectionBlocksIntroTextBlockCtaButtonFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  faIcon: StringFilter
  colorScheme: StringFilter
  size: StringFilter
}

input PageMainSectionBlocksIntroTextBlockCtaFilter {
  button: PageMainSectionBlocksIntroTextBlockCtaButtonFilter
}

input PageMainSectionBlocksIntroTextBlockAdvancedBlockOptionsFilter {
  wrapperTag: StringFilter
  headerTag: StringFilter
  overrideTitleStyle: StringFilter
  subtitleTag: StringFilter
  maxWidth: StringFilter
}

input PageMainSectionBlocksIntroTextBlockFilter {
  draft: BooleanFilter
  textColorSheme: StringFilter
  title: StringFilter
  subtitle: StringFilter
  introtext: StringFilter
  cta: PageMainSectionBlocksIntroTextBlockCtaFilter
  advancedBlockOptions: PageMainSectionBlocksIntroTextBlockAdvancedBlockOptionsFilter
}

input PageMainSectionBlocksSbsImageTextBlockTextButtonFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  faIcon: StringFilter
  colorScheme: StringFilter
  size: StringFilter
}

input PageMainSectionBlocksSbsImageTextBlockTextFilter {
  button: PageMainSectionBlocksSbsImageTextBlockTextButtonFilter
}

input PageMainSectionBlocksSbsImageTextBlockCtaButtonFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  faIcon: StringFilter
  colorScheme: StringFilter
  size: StringFilter
}

input PageMainSectionBlocksSbsImageTextBlockCtaFilter {
  button: PageMainSectionBlocksSbsImageTextBlockCtaButtonFilter
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsFormatFilter {
  fill: BooleanFilter
  aspectRatio: StringFilter
  gravity: StringFilter
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsEffectsFilter {
  autoColor: NumberFilter
  autoContrast: NumberFilter
  autoBrightness: NumberFilter
  improve: NumberFilter
  sharpen: NumberFilter
  gamma: NumberFilter
  redeye: BooleanFilter
  grayscale: BooleanFilter
  sepia: BooleanFilter
  art: StringFilter
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemoveFilter {
  items: StringFilter
  multiple: BooleanFilter
  shadow: BooleanFilter
  execute: BooleanFilter
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolorFilter {
  items: StringFilter
  to: StringFilter
  multiple: BooleanFilter
  execute: BooleanFilter
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplaceFilter {
  from: StringFilter
  to: StringFilter
  preserveGeometry: BooleanFilter
  execute: BooleanFilter
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsGenerativeFilter {
  genRemove: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemoveFilter
  genRecolor: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolorFilter
  genReplace: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplaceFilter
  genFill: BooleanFilter
  genRestore: BooleanFilter
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsFilter {
  priority: BooleanFilter
  format: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsFormatFilter
  effects: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsEffectsFilter
  generative: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsGenerativeFilter
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedBlockOptionsFilter {
  ordering: StringFilter
  centerTextMobile: BooleanFilter
  textAlign: StringFilter
  imageAlign: StringFilter
  wrapperTag: StringFilter
  headerTag: StringFilter
  overrideTitleStyle: StringFilter
  subtitleTag: StringFilter
}

input PageMainSectionBlocksSbsImageTextBlockFilter {
  draft: BooleanFilter
  textColorSheme: StringFilter
  title: StringFilter
  subtitle: StringFilter
  text: PageMainSectionBlocksSbsImageTextBlockTextFilter
  cta: PageMainSectionBlocksSbsImageTextBlockCtaFilter
  src: ImageFilter
  alt: StringFilter
  advancedImageOptions: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsFilter
  advancedBlockOptions: PageMainSectionBlocksSbsImageTextBlockAdvancedBlockOptionsFilter
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardCtaButtonFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  faIcon: StringFilter
  colorScheme: StringFilter
  size: StringFilter
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardCtaFilter {
  button: PageMainSectionBlocksCardListBlockCardsImageTextCardCtaButtonFilter
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsFormatFilter {
  fill: BooleanFilter
  aspectRatio: StringFilter
  gravity: StringFilter
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsEffectsFilter {
  autoColor: NumberFilter
  autoContrast: NumberFilter
  autoBrightness: NumberFilter
  improve: NumberFilter
  sharpen: NumberFilter
  gamma: NumberFilter
  redeye: BooleanFilter
  grayscale: BooleanFilter
  sepia: BooleanFilter
  art: StringFilter
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsFilter {
  priority: BooleanFilter
  format: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsFormatFilter
  effects: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsEffectsFilter
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedCardOptionsFilter {
  headerTag: StringFilter
  wrapperTag: StringFilter
  cssClass: StringFilter
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardFilter {
  draft: BooleanFilter
  title: StringFilter
  introtext: RichTextFilter
  textCenter: BooleanFilter
  cta: PageMainSectionBlocksCardListBlockCardsImageTextCardCtaFilter
  backgroundColor: StringFilter
  textColorSheme: StringFilter
  src: ImageFilter
  alt: StringFilter
  advancedImageOptions: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsFilter
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedCardOptionsFilter
}

input PageMainSectionBlocksCardListBlockCardsIconTextCardCtaButtonFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  faIcon: StringFilter
  colorScheme: StringFilter
  size: StringFilter
}

input PageMainSectionBlocksCardListBlockCardsIconTextCardCtaFilter {
  button: PageMainSectionBlocksCardListBlockCardsIconTextCardCtaButtonFilter
}

input PageMainSectionBlocksCardListBlockCardsIconTextCardAdvancedCardOptionsFilter {
  headerTag: StringFilter
  wrapperTag: StringFilter
  cssClass: StringFilter
  iconPosition: StringFilter
}

input PageMainSectionBlocksCardListBlockCardsIconTextCardFilter {
  draft: BooleanFilter
  faIcon: StringFilter
  title: StringFilter
  introtext: RichTextFilter
  cta: PageMainSectionBlocksCardListBlockCardsIconTextCardCtaFilter
  backgroundColor: StringFilter
  textColorSheme: StringFilter
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsIconTextCardAdvancedCardOptionsFilter
}

input PageMainSectionBlocksCardListBlockCardsStepTextCardCtaButtonFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  faIcon: StringFilter
  colorScheme: StringFilter
  size: StringFilter
}

input PageMainSectionBlocksCardListBlockCardsStepTextCardCtaFilter {
  button: PageMainSectionBlocksCardListBlockCardsStepTextCardCtaButtonFilter
}

input PageMainSectionBlocksCardListBlockCardsStepTextCardAdvancedCardOptionsFilter {
  headerTag: StringFilter
  wrapperTag: StringFilter
  cssClass: StringFilter
  iconPosition: StringFilter
}

input PageMainSectionBlocksCardListBlockCardsStepTextCardFilter {
  draft: BooleanFilter
  stepNo: StringFilter
  title: StringFilter
  introtext: RichTextFilter
  cta: PageMainSectionBlocksCardListBlockCardsStepTextCardCtaFilter
  backgroundColor: StringFilter
  textColorSheme: StringFilter
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsStepTextCardAdvancedCardOptionsFilter
}

input PageMainSectionBlocksCardListBlockCardsFilter {
  imageTextCard: PageMainSectionBlocksCardListBlockCardsImageTextCardFilter
  iconTextCard: PageMainSectionBlocksCardListBlockCardsIconTextCardFilter
  stepTextCard: PageMainSectionBlocksCardListBlockCardsStepTextCardFilter
}

input PageMainSectionBlocksCardListBlockAdvancedBlockOptionsFilter {
  cardAlign: StringFilter
  columnsMobile: StringFilter
  columnsTablet: StringFilter
  columnsDesktop: StringFilter
  gap: StringFilter
  cssClass: StringFilter
}

input PageMainSectionBlocksCardListBlockFilter {
  draft: BooleanFilter
  name: StringFilter
  cards: PageMainSectionBlocksCardListBlockCardsFilter
  advancedBlockOptions: PageMainSectionBlocksCardListBlockAdvancedBlockOptionsFilter
}

input PageMainSectionBlocksTextBlockTextButtonFilter {
  linkText: StringFilter
  linkHref: StringFilter
  linkType: StringFilter
  linkTarget: StringFilter
  faIcon: StringFilter
  colorScheme: StringFilter
  size: StringFilter
}

input PageMainSectionBlocksTextBlockTextFilter {
  button: PageMainSectionBlocksTextBlockTextButtonFilter
}

input PageMainSectionBlocksTextBlockAdvancedBlockOptionsFilter {
  wrapperTag: StringFilter
  headerTag: StringFilter
  overrideTitleStyle: StringFilter
}

input PageMainSectionBlocksTextBlockFilter {
  draft: BooleanFilter
  textColorSheme: StringFilter
  title: StringFilter
  text: PageMainSectionBlocksTextBlockTextFilter
  advancedBlockOptions: PageMainSectionBlocksTextBlockAdvancedBlockOptionsFilter
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsFormatFilter {
  fill: BooleanFilter
  aspectRatio: StringFilter
  gravity: StringFilter
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsEffectsFilter {
  autoColor: NumberFilter
  autoContrast: NumberFilter
  autoBrightness: NumberFilter
  improve: NumberFilter
  sharpen: NumberFilter
  gamma: NumberFilter
  redeye: BooleanFilter
  grayscale: BooleanFilter
  sepia: BooleanFilter
  art: StringFilter
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeFilter {
  genRemove: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemoveFilter
  genRecolor: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolorFilter
  genReplace: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplaceFilter
  genFill: BooleanFilter
  genRestore: BooleanFilter
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsFilter {
  priority: BooleanFilter
  format: PageMainSectionBlocksImageBlockAdvancedImageOptionsFormatFilter
  effects: PageMainSectionBlocksImageBlockAdvancedImageOptionsEffectsFilter
  generative: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeFilter
}

input PageMainSectionBlocksImageBlockFilter {
  draft: BooleanFilter
  src: ImageFilter
  alt: StringFilter
  advancedImageOptions: PageMainSectionBlocksImageBlockAdvancedImageOptionsFilter
}

input PageMainSectionBlocksTestimonialCarouselBlockTestimonialsTestimonialFilter {
  testimonial: TestimonialFilter
}

input PageMainSectionBlocksTestimonialCarouselBlockTestimonialsFilter {
  title: StringFilter
  testimonial: PageMainSectionBlocksTestimonialCarouselBlockTestimonialsTestimonialFilter
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsControlsFilter {
  ctrlColorScheme: StringFilter
  ctrlPrevNext: BooleanFilter
  ctrlDotNav: BooleanFilter
  ctrlStartStop: BooleanFilter
  ctrlSizing: StringFilter
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoplayFilter {
  playOnInit: BooleanFilter
  delay: NumberFilter
  stopOnInteraction: BooleanFilter
  stopOnMouseEnter: BooleanFilter
  stopOnFocusIn: BooleanFilter
  stopOnLastSnap: BooleanFilter
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoscrollFilter {
  playOnInit: BooleanFilter
  speed: NumberFilter
  startDelay: NumberFilter
  stopOnInteraction: BooleanFilter
  stopOnMouseEnter: BooleanFilter
  stopOnFocusIn: BooleanFilter
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsFilter {
  loop: BooleanFilter
  slidesToScroll: StringFilter
  duration: NumberFilter
  containScroll: StringFilter
  dragFree: BooleanFilter
  controls: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsControlsFilter
  automation: StringFilter
  autoplay: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoplayFilter
  autoscroll: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoscrollFilter
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsFilter {
  cardAlign: StringFilter
  columnsMobile: StringFilter
  columnsTablet: StringFilter
  columnsDesktop: StringFilter
  gap: StringFilter
  cssClass: StringFilter
  emblaOptions: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsFilter
}

input PageMainSectionBlocksTestimonialCarouselBlockFilter {
  draft: BooleanFilter
  name: StringFilter
  textColorSheme: StringFilter
  testimonials: PageMainSectionBlocksTestimonialCarouselBlockTestimonialsFilter
  advancedBlockOptions: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsFilter
}

input PageMainSectionBlocksFilter {
  heroTextImageBlock: PageMainSectionBlocksHeroTextImageBlockFilter
  introTextBlock: PageMainSectionBlocksIntroTextBlockFilter
  sbsImageTextBlock: PageMainSectionBlocksSbsImageTextBlockFilter
  cardListBlock: PageMainSectionBlocksCardListBlockFilter
  textBlock: PageMainSectionBlocksTextBlockFilter
  imageBlock: PageMainSectionBlocksImageBlockFilter
  testimonialCarouselBlock: PageMainSectionBlocksTestimonialCarouselBlockFilter
}

input PageMainSectionAdvancedSectionOptionsPaddingsFilter {
  paddingTop: StringFilter
  paddingTopMobile: StringFilter
  paddingBottom: StringFilter
  paddingBottomMobile: StringFilter
  paddingBlocks: StringFilter
  paddingBlocksMobile: StringFilter
}

input PageMainSectionAdvancedSectionOptionsFilter {
  sizing: StringFilter
  wrapperTag: StringFilter
  paddings: PageMainSectionAdvancedSectionOptionsPaddingsFilter
  cssClass: StringFilter
  cssId: StringFilter
}

input PageMainSectionFilter {
  draft: BooleanFilter
  name: StringFilter
  backgroundColor: StringFilter
  blocks: PageMainSectionBlocksFilter
  advancedSectionOptions: PageMainSectionAdvancedSectionOptionsFilter
}

input PageMainFilter {
  section: PageMainSectionFilter
}

input PageSeoMetaKeywordsFilter {
  metaKeywordList: StringFilter
}

input PageSeoFilter {
  metaTitle: StringFilter
  metaDescription: StringFilter
  metaKeywords: PageSeoMetaKeywordsFilter
}

input PageSocialSharingOptionsFilter {
  title: StringFilter
  description: StringFilter
  image: ImageFilter
}

input PageFilter {
  draft: BooleanFilter
  title: StringFilter
  main: PageMainFilter
  seo: PageSeoFilter
  socialSharingOptions: PageSocialSharingOptionsFilter
  createdAt: StringFilter
  lastModified: StringFilter
}

type PageConnectionEdges {
  cursor: String!
  node: Page
}

type PageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PageConnectionEdges]
}

type Testimonial implements Node & Document {
  draft: Boolean!
  name: String!
  company: String
  text: String
  avatar: String
  logo: String
  createdAt: String
  lastModified: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input TestimonialFilter {
  draft: BooleanFilter
  name: StringFilter
  company: StringFilter
  text: StringFilter
  avatar: ImageFilter
  logo: ImageFilter
  createdAt: StringFilter
  lastModified: StringFilter
}

type TestimonialConnectionEdges {
  cursor: String!
  node: Testimonial
}

type TestimonialConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [TestimonialConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createFolder(collection: String, relativePath: String!): DocumentNode!
  updateGlobalSettings(relativePath: String!, params: GlobalSettingsMutation!): GlobalSettings!
  createGlobalSettings(relativePath: String!, params: GlobalSettingsMutation!): GlobalSettings!
  updateNavigation(relativePath: String!, params: NavigationMutation!): Navigation!
  createNavigation(relativePath: String!, params: NavigationMutation!): Navigation!
  updatePage(relativePath: String!, params: PageMutation!): Page!
  createPage(relativePath: String!, params: PageMutation!): Page!
  updateTestimonial(relativePath: String!, params: TestimonialMutation!): Testimonial!
  createTestimonial(relativePath: String!, params: TestimonialMutation!): Testimonial!
}

input DocumentUpdateMutation {
  globalSettings: GlobalSettingsMutation
  navigation: NavigationMutation
  page: PageMutation
  testimonial: TestimonialMutation
  relativePath: String
}

input DocumentMutation {
  globalSettings: GlobalSettingsMutation
  navigation: NavigationMutation
  page: PageMutation
  testimonial: TestimonialMutation
}

input GlobalSettingsSiteInformationContactDataEmailMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationContactDataPhoneMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationContactDataMobileMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationContactDataMutation {
  street: String
  streetNo: String
  postalCode: String
  city: String
  email: GlobalSettingsSiteInformationContactDataEmailMutation
  phone: GlobalSettingsSiteInformationContactDataPhoneMutation
  mobile: GlobalSettingsSiteInformationContactDataMobileMutation
  fax: String
}

input GlobalSettingsSiteInformationSocialLinksFacebookMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationSocialLinksXMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationSocialLinksThreadsMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationSocialLinksInstagramMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationSocialLinksYoutubeMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationSocialLinksLinkedInMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationSocialLinksXingMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input GlobalSettingsSiteInformationSocialLinksMutation {
  iconStyle: String
  facebook: GlobalSettingsSiteInformationSocialLinksFacebookMutation
  x: GlobalSettingsSiteInformationSocialLinksXMutation
  threads: GlobalSettingsSiteInformationSocialLinksThreadsMutation
  instagram: GlobalSettingsSiteInformationSocialLinksInstagramMutation
  youtube: GlobalSettingsSiteInformationSocialLinksYoutubeMutation
  linkedIn: GlobalSettingsSiteInformationSocialLinksLinkedInMutation
  xing: GlobalSettingsSiteInformationSocialLinksXingMutation
}

input GlobalSettingsSiteInformationMutation {
  siteName: String
  siteUrl: String
  logo: String
  contactData: GlobalSettingsSiteInformationContactDataMutation
  socialLinks: GlobalSettingsSiteInformationSocialLinksMutation
}

input GlobalSettingsSlideInMenuMutation {
  position: String
}

input GlobalSettingsGlobalSeoMetaKeywordsMutation {
  metaKeywordList: [String]
}

input GlobalSettingsGlobalSeoRobotsMutation {
  index: Boolean
  follow: Boolean
  imageindex: Boolean
}

input GlobalSettingsGlobalSeoMutation {
  metaDescription: String
  metaKeywords: GlobalSettingsGlobalSeoMetaKeywordsMutation
  robots: GlobalSettingsGlobalSeoRobotsMutation
}

input GlobalSettingsGlobalLayoutAdditionalColorsMutation {
  colorName: String
  colorValue: String
}

input GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersColorLayerTemplateMutation {
  colorLayer: String
}

input GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersImageLayerTemplateMutation {
  image: String
  bgPos: String
  bgPosStr: String
  bgRep: String
}

input GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersMutation {
  colorLayerTemplate: GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersColorLayerTemplateMutation
  imageLayerTemplate: GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersImageLayerTemplateMutation
}

input GlobalSettingsGlobalLayoutAdvancedBackgroundsMutation {
  advancedBackgroundName: String
  advancedBackgroundLayers: [GlobalSettingsGlobalLayoutAdvancedBackgroundsAdvancedBackgroundLayersMutation]
}

input GlobalSettingsGlobalLayoutTextStyleSetsMutation {
  name: String
  headingColor: String
  bodyColor: String
}

input GlobalSettingsGlobalLayoutButtonStyleSetsMutation {
  name: String
  backgroundColor: String
  backgroundColorHover: String
  borderColor: String
  borderColorHover: String
  borderWidth: String
  textColor: String
  textColorHover: String
}

input GlobalSettingsGlobalLayoutTwSafeListMutation {
  safeListClasses: [String]
}

input GlobalSettingsGlobalLayoutMutation {
  primaryColor: String
  secondaryColor: String
  additionalColors: [GlobalSettingsGlobalLayoutAdditionalColorsMutation]
  headingColor: String
  bodyColor: String
  advancedBackgrounds: [GlobalSettingsGlobalLayoutAdvancedBackgroundsMutation]
  textStyleSets: [GlobalSettingsGlobalLayoutTextStyleSetsMutation]
  buttonStyleSets: [GlobalSettingsGlobalLayoutButtonStyleSetsMutation]
  twSafeList: GlobalSettingsGlobalLayoutTwSafeListMutation
}

input GlobalSettingsMailConfigurationMutation {
  logo: String
  contactRecipients: [String]
  senderName: String
  senderAddress: String
  replyAddress: String
}

input GlobalSettingsLegalTextsImprintMutation {
  imprintFetch: Boolean
  imprintAdditionalText: JSON
}

input GlobalSettingsLegalTextsPrivacyPolicyMutation {
  privacyPolicyFetch: Boolean
  privacyPolicyAdditionalText: JSON
}

input GlobalSettingsLegalTextsMutation {
  imprint: GlobalSettingsLegalTextsImprintMutation
  privacyPolicy: GlobalSettingsLegalTextsPrivacyPolicyMutation
}

input GlobalSettingsSiteFooterMutation {
  logo: String
}

input GlobalSettingsMutation {
  siteInformation: GlobalSettingsSiteInformationMutation
  SlideInMenu: GlobalSettingsSlideInMenuMutation
  globalSeo: GlobalSettingsGlobalSeoMutation
  globalLayout: GlobalSettingsGlobalLayoutMutation
  mailConfiguration: GlobalSettingsMailConfigurationMutation
  legalTexts: GlobalSettingsLegalTextsMutation
  siteFooter: GlobalSettingsSiteFooterMutation
}

input NavigationMenuSubmenuMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
}

input NavigationMenuMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  submenu: [NavigationMenuSubmenuMutation]
}

input NavigationMutation {
  title: String
  menu: [NavigationMenuMutation]
}

input PageMainSectionBlocksHeroTextImageBlockCtaButtonMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String
  size: String
}

input PageMainSectionBlocksHeroTextImageBlockCtaMutation {
  button: PageMainSectionBlocksHeroTextImageBlockCtaButtonMutation
}

input PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsFormatMutation {
  fill: Boolean
  aspectRatio: String
  gravity: String
}

input PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsEffectsMutation {
  autoColor: Float
  autoContrast: Float
  autoBrightness: Float
  improve: Float
  sharpen: Float
  gamma: Float
  redeye: Boolean
  grayscale: Boolean
  sepia: Boolean
  art: String
}

input PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsMutation {
  priority: Boolean
  format: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsFormatMutation
  effects: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsEffectsMutation
}

input PageMainSectionBlocksHeroTextImageBlockAdvancedBlockOptionsMutation {
  ordering: String
  textAlign: String
  imageAlign: String
  wrapperTag: String
  headerTag: String
  overrideTitleStyle: String
  subtitleTag: String
  overrideSubTitleStyle: String
}

input PageMainSectionBlocksHeroTextImageBlockMutation {
  draft: Boolean
  textColorSheme: String
  title: String
  subtitle: String
  introtext: String
  cta: [PageMainSectionBlocksHeroTextImageBlockCtaMutation]
  src: String
  alt: String
  advancedImageOptions: PageMainSectionBlocksHeroTextImageBlockAdvancedImageOptionsMutation
  advancedBlockOptions: PageMainSectionBlocksHeroTextImageBlockAdvancedBlockOptionsMutation
}

input PageMainSectionBlocksIntroTextBlockCtaButtonMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String
  size: String
}

input PageMainSectionBlocksIntroTextBlockCtaMutation {
  button: PageMainSectionBlocksIntroTextBlockCtaButtonMutation
}

input PageMainSectionBlocksIntroTextBlockAdvancedBlockOptionsMutation {
  wrapperTag: String
  headerTag: String
  overrideTitleStyle: String
  subtitleTag: String
  maxWidth: String
}

input PageMainSectionBlocksIntroTextBlockMutation {
  draft: Boolean
  textColorSheme: String
  title: String
  subtitle: String
  introtext: String
  cta: [PageMainSectionBlocksIntroTextBlockCtaMutation]
  advancedBlockOptions: PageMainSectionBlocksIntroTextBlockAdvancedBlockOptionsMutation
}

input PageMainSectionBlocksSbsImageTextBlockCtaButtonMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String
  size: String
}

input PageMainSectionBlocksSbsImageTextBlockCtaMutation {
  button: PageMainSectionBlocksSbsImageTextBlockCtaButtonMutation
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsFormatMutation {
  fill: Boolean
  aspectRatio: String
  gravity: String
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsEffectsMutation {
  autoColor: Float
  autoContrast: Float
  autoBrightness: Float
  improve: Float
  sharpen: Float
  gamma: Float
  redeye: Boolean
  grayscale: Boolean
  sepia: Boolean
  art: String
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemoveMutation {
  items: [String]
  multiple: Boolean
  shadow: Boolean
  execute: Boolean
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolorMutation {
  items: [String]
  to: String
  multiple: Boolean
  execute: Boolean
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplaceMutation {
  from: String
  to: String
  preserveGeometry: Boolean
  execute: Boolean
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsGenerativeMutation {
  genRemove: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemoveMutation
  genRecolor: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolorMutation
  genReplace: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplaceMutation
  genFill: Boolean
  genRestore: Boolean
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsMutation {
  priority: Boolean
  format: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsFormatMutation
  effects: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsEffectsMutation
  generative: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsGenerativeMutation
}

input PageMainSectionBlocksSbsImageTextBlockAdvancedBlockOptionsMutation {
  ordering: String
  centerTextMobile: Boolean
  textAlign: String
  imageAlign: String
  wrapperTag: String
  headerTag: String
  overrideTitleStyle: String
  subtitleTag: String
}

input PageMainSectionBlocksSbsImageTextBlockMutation {
  draft: Boolean
  textColorSheme: String
  title: String
  subtitle: String
  text: JSON
  cta: [PageMainSectionBlocksSbsImageTextBlockCtaMutation]
  src: String
  alt: String
  advancedImageOptions: PageMainSectionBlocksSbsImageTextBlockAdvancedImageOptionsMutation
  advancedBlockOptions: PageMainSectionBlocksSbsImageTextBlockAdvancedBlockOptionsMutation
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardCtaButtonMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String
  size: String
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardCtaMutation {
  button: PageMainSectionBlocksCardListBlockCardsImageTextCardCtaButtonMutation
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsFormatMutation {
  fill: Boolean
  aspectRatio: String
  gravity: String
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsEffectsMutation {
  autoColor: Float
  autoContrast: Float
  autoBrightness: Float
  improve: Float
  sharpen: Float
  gamma: Float
  redeye: Boolean
  grayscale: Boolean
  sepia: Boolean
  art: String
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsMutation {
  priority: Boolean
  format: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsFormatMutation
  effects: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsEffectsMutation
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedCardOptionsMutation {
  headerTag: String
  wrapperTag: String
  cssClass: String
}

input PageMainSectionBlocksCardListBlockCardsImageTextCardMutation {
  draft: Boolean
  title: String
  introtext: JSON
  textCenter: Boolean
  cta: [PageMainSectionBlocksCardListBlockCardsImageTextCardCtaMutation]
  backgroundColor: String
  textColorSheme: String
  src: String
  alt: String
  advancedImageOptions: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedImageOptionsMutation
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsImageTextCardAdvancedCardOptionsMutation
}

input PageMainSectionBlocksCardListBlockCardsIconTextCardCtaButtonMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String
  size: String
}

input PageMainSectionBlocksCardListBlockCardsIconTextCardCtaMutation {
  button: PageMainSectionBlocksCardListBlockCardsIconTextCardCtaButtonMutation
}

input PageMainSectionBlocksCardListBlockCardsIconTextCardAdvancedCardOptionsMutation {
  headerTag: String
  wrapperTag: String
  cssClass: String
  iconPosition: String
}

input PageMainSectionBlocksCardListBlockCardsIconTextCardMutation {
  draft: Boolean
  faIcon: String
  title: String
  introtext: JSON
  cta: [PageMainSectionBlocksCardListBlockCardsIconTextCardCtaMutation]
  backgroundColor: String
  textColorSheme: String
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsIconTextCardAdvancedCardOptionsMutation
}

input PageMainSectionBlocksCardListBlockCardsStepTextCardCtaButtonMutation {
  linkText: String
  linkHref: String
  linkType: String
  linkTarget: String
  faIcon: String
  colorScheme: String
  size: String
}

input PageMainSectionBlocksCardListBlockCardsStepTextCardCtaMutation {
  button: PageMainSectionBlocksCardListBlockCardsStepTextCardCtaButtonMutation
}

input PageMainSectionBlocksCardListBlockCardsStepTextCardAdvancedCardOptionsMutation {
  headerTag: String
  wrapperTag: String
  cssClass: String
  iconPosition: String
}

input PageMainSectionBlocksCardListBlockCardsStepTextCardMutation {
  draft: Boolean
  stepNo: String
  title: String
  introtext: JSON
  cta: [PageMainSectionBlocksCardListBlockCardsStepTextCardCtaMutation]
  backgroundColor: String
  textColorSheme: String
  advancedCardOptions: PageMainSectionBlocksCardListBlockCardsStepTextCardAdvancedCardOptionsMutation
}

input PageMainSectionBlocksCardListBlockCardsMutation {
  imageTextCard: PageMainSectionBlocksCardListBlockCardsImageTextCardMutation
  iconTextCard: PageMainSectionBlocksCardListBlockCardsIconTextCardMutation
  stepTextCard: PageMainSectionBlocksCardListBlockCardsStepTextCardMutation
}

input PageMainSectionBlocksCardListBlockAdvancedBlockOptionsMutation {
  cardAlign: String
  columnsMobile: String
  columnsTablet: String
  columnsDesktop: String
  gap: String
  cssClass: String
}

input PageMainSectionBlocksCardListBlockMutation {
  draft: Boolean
  name: String
  cards: [PageMainSectionBlocksCardListBlockCardsMutation]
  advancedBlockOptions: PageMainSectionBlocksCardListBlockAdvancedBlockOptionsMutation
}

input PageMainSectionBlocksTextBlockAdvancedBlockOptionsMutation {
  wrapperTag: String
  headerTag: String
  overrideTitleStyle: String
}

input PageMainSectionBlocksTextBlockMutation {
  draft: Boolean
  textColorSheme: String
  title: String
  text: JSON
  advancedBlockOptions: PageMainSectionBlocksTextBlockAdvancedBlockOptionsMutation
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsFormatMutation {
  fill: Boolean
  aspectRatio: String
  gravity: String
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsEffectsMutation {
  autoColor: Float
  autoContrast: Float
  autoBrightness: Float
  improve: Float
  sharpen: Float
  gamma: Float
  redeye: Boolean
  grayscale: Boolean
  sepia: Boolean
  art: String
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeMutation {
  genRemove: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRemoveMutation
  genRecolor: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenRecolorMutation
  genReplace: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeGenReplaceMutation
  genFill: Boolean
  genRestore: Boolean
}

input PageMainSectionBlocksImageBlockAdvancedImageOptionsMutation {
  priority: Boolean
  format: PageMainSectionBlocksImageBlockAdvancedImageOptionsFormatMutation
  effects: PageMainSectionBlocksImageBlockAdvancedImageOptionsEffectsMutation
  generative: PageMainSectionBlocksImageBlockAdvancedImageOptionsGenerativeMutation
}

input PageMainSectionBlocksImageBlockMutation {
  draft: Boolean
  src: String
  alt: String
  advancedImageOptions: PageMainSectionBlocksImageBlockAdvancedImageOptionsMutation
}

input PageMainSectionBlocksTestimonialCarouselBlockTestimonialsMutation {
  title: String
  testimonial: String
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsControlsMutation {
  ctrlColorScheme: String
  ctrlPrevNext: Boolean
  ctrlDotNav: Boolean
  ctrlStartStop: Boolean
  ctrlSizing: String
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoplayMutation {
  playOnInit: Boolean
  delay: Float
  stopOnInteraction: Boolean
  stopOnMouseEnter: Boolean
  stopOnFocusIn: Boolean
  stopOnLastSnap: Boolean
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoscrollMutation {
  playOnInit: Boolean
  speed: Float
  startDelay: Float
  stopOnInteraction: Boolean
  stopOnMouseEnter: Boolean
  stopOnFocusIn: Boolean
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsMutation {
  loop: Boolean
  slidesToScroll: String
  duration: Float
  containScroll: String
  dragFree: Boolean
  controls: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsControlsMutation
  automation: String
  autoplay: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoplayMutation
  autoscroll: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsAutoscrollMutation
}

input PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsMutation {
  cardAlign: String
  columnsMobile: String
  columnsTablet: String
  columnsDesktop: String
  gap: String
  cssClass: String
  emblaOptions: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsEmblaOptionsMutation
}

input PageMainSectionBlocksTestimonialCarouselBlockMutation {
  draft: Boolean
  name: String
  textColorSheme: String
  testimonials: [PageMainSectionBlocksTestimonialCarouselBlockTestimonialsMutation]
  advancedBlockOptions: PageMainSectionBlocksTestimonialCarouselBlockAdvancedBlockOptionsMutation
}

input PageMainSectionBlocksMutation {
  heroTextImageBlock: PageMainSectionBlocksHeroTextImageBlockMutation
  introTextBlock: PageMainSectionBlocksIntroTextBlockMutation
  sbsImageTextBlock: PageMainSectionBlocksSbsImageTextBlockMutation
  cardListBlock: PageMainSectionBlocksCardListBlockMutation
  textBlock: PageMainSectionBlocksTextBlockMutation
  imageBlock: PageMainSectionBlocksImageBlockMutation
  testimonialCarouselBlock: PageMainSectionBlocksTestimonialCarouselBlockMutation
}

input PageMainSectionAdvancedSectionOptionsPaddingsMutation {
  paddingTop: String
  paddingTopMobile: String
  paddingBottom: String
  paddingBottomMobile: String
  paddingBlocks: String
  paddingBlocksMobile: String
}

input PageMainSectionAdvancedSectionOptionsMutation {
  sizing: String
  wrapperTag: String
  paddings: PageMainSectionAdvancedSectionOptionsPaddingsMutation
  cssClass: String
  cssId: String
}

input PageMainSectionMutation {
  draft: Boolean
  name: String
  backgroundColor: String
  blocks: [PageMainSectionBlocksMutation]
  advancedSectionOptions: PageMainSectionAdvancedSectionOptionsMutation
}

input PageMainMutation {
  section: PageMainSectionMutation
}

input PageSeoMetaKeywordsMutation {
  metaKeywordList: [String]
}

input PageSeoMutation {
  metaTitle: String
  metaDescription: String
  metaKeywords: PageSeoMetaKeywordsMutation
}

input PageSocialSharingOptionsMutation {
  title: String
  description: String
  image: String
}

input PageMutation {
  draft: Boolean
  title: String
  main: [PageMainMutation]
  seo: PageSeoMutation
  socialSharingOptions: PageSocialSharingOptionsMutation
  createdAt: String
  lastModified: String
}

input TestimonialMutation {
  draft: Boolean
  name: String
  company: String
  text: String
  avatar: String
  logo: String
  createdAt: String
  lastModified: String
}

schema {
  query: Query
  mutation: Mutation
}
